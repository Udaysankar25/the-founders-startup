{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\the-founders-startup\\\\src\\\\flows\\\\founderFlow\\\\SetNewPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNewPassword = () => {\n  _s();\n  var _useLocation$state;\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const navigate = useNavigate();\n  const email = (_useLocation$state = useLocation().state) === null || _useLocation$state === void 0 ? void 0 : _useLocation$state.email;\n  const handleReset = e => {\n    e.preventDefault();\n    if (password !== confirm) return alert('Passwords do not match');\n    // Call API to update password\n    navigate('/reset-success');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReset,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirm,\n          onChange: e => setConfirm(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Back to log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Set new Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your password must be at least 8 characters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SetNewPassword, \"/0Gih3zMZBqJnCivXp6Je21wBpU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SetNewPassword;\nexport default SetNewPassword;\nvar _c;\n$RefreshReg$(_c, \"SetNewPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","SetNewPassword","_s","_useLocation$state","password","setPassword","confirm","setConfirm","navigate","email","state","handleReset","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/Pc/Desktop/the-founders-startup/src/flows/founderFlow/SetNewPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst SetNewPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const navigate = useNavigate();\r\n  const email = useLocation().state?.email;\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirm) return alert('Passwords do not match');\r\n    // Call API to update password\r\n    navigate('/reset-success');\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-form\">\r\n        <h2>Set new password</h2>\r\n        <form onSubmit={handleReset}>\r\n          <label>Password</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          <label>Confirm Password</label>\r\n          <input type=\"password\" value={confirm} onChange={(e) => setConfirm(e.target.value)} required />\r\n          <button type=\"submit\">Reset Password</button>\r\n        </form>\r\n        <a href=\"/login\">Back to log in</a>\r\n      </div>\r\n      <div className=\"auth-side\">\r\n        <h3>Set new Password</h3>\r\n        <p>Your password must be at least 8 characters.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetNewPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,KAAK,IAAAN,kBAAA,GAAGN,WAAW,CAAC,CAAC,CAACa,KAAK,cAAAP,kBAAA,uBAAnBA,kBAAA,CAAqBM,KAAK;EAExC,MAAME,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIT,QAAQ,KAAKE,OAAO,EAAE,OAAOQ,KAAK,CAAC,wBAAwB,CAAC;IAChE;IACAN,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC;EAED,oBACER,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhB,OAAA;QAAAgB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpB,OAAA;QAAMqB,QAAQ,EAAEV,WAAY;QAAAK,QAAA,gBAC1BhB,OAAA;UAAAgB,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBpB,OAAA;UAAOsB,IAAI,EAAC,UAAU;UAACC,KAAK,EAAEnB,QAAS;UAACoB,QAAQ,EAAGZ,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjGpB,OAAA;UAAAgB,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BpB,OAAA;UAAOsB,IAAI,EAAC,UAAU;UAACC,KAAK,EAAEjB,OAAQ;UAACkB,QAAQ,EAAGZ,CAAC,IAAKL,UAAU,CAACK,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;UAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/FpB,OAAA;UAAQsB,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACPpB,OAAA;QAAG2B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNpB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhB,OAAA;QAAAgB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpB,OAAA;QAAAgB,QAAA,EAAG;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCID,cAAc;EAAA,QAGDH,WAAW,EACdD,WAAW;AAAA;AAAA+B,EAAA,GAJrB3B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}